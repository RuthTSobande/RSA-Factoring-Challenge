#!/usr/bin/env bash
#is a challenge
import math

def is_prime(num):
    if num <= 1:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    max_divisor = math.isqrt(num)
    for divisor in range(3, max_divisor + 1, 2):
        if num % divisor == 0:
            return False
    return True

def find_prime_factors(n):
    for i in range(2, math.isqrt(n) + 1):
        if n % i == 0:
            if is_prime(i) and is_prime(n // i):
                return i, n // i
    return None, None

def factorize_rsa_number(n):
    p, q = find_prime_factors(n)
    if p is not None and q is not None:
        return f"{n}={p}*{q}"
    else:
        return f"No prime factors found for {n}"

# Test cases
test_numbers = [
    6,
    77,
    239821585064027,
    2497885147362973
]

for index, n in enumerate(test_numbers, start=1):
    print(f"Test case {index}:")
    print(factorize_rsa_number(n))
